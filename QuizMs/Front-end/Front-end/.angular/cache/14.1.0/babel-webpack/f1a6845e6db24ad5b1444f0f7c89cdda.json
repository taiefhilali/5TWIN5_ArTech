{"ast":null,"code":"// Hot Module Replacement\nfunction identity(val) {\n  return val;\n}\nexport function bootloader(main, before, after) {\n  if (typeof main === 'object') {\n    const _main = main.main;\n    before = main.before;\n    after = main.after;\n    main = _main;\n  }\n  before = before || identity;\n  after = after || identity;\n  const readyState = document.readyState;\n  function __domReadyHandler() {\n    document.removeEventListener('DOMContentLoaded', __domReadyHandler);\n    after(main(before(readyState)));\n  }\n  switch (readyState) {\n    case 'loading':\n      document.addEventListener('DOMContentLoaded', __domReadyHandler);\n      break;\n    case 'interactive':\n    case 'complete':\n    default:\n      after(main(before(readyState)));\n  }\n}\n// create new host elements and remove the old elements\nexport function createNewHosts(cmps) {\n  const components = Array.prototype.map.call(cmps, function (componentNode) {\n    const newNode = document.createElement(componentNode.tagName);\n    const parentNode = componentNode.parentNode;\n    const currentDisplay = newNode.style.display;\n    newNode.style.display = 'none';\n    parentNode.insertBefore(newNode, componentNode);\n    function removeOldHost() {\n      newNode.style.display = currentDisplay;\n      try {\n        parentNode.removeChild(componentNode);\n      } catch (e) {}\n    }\n    return removeOldHost;\n  });\n  return function removeOldHosts() {\n    components.forEach(removeOldHost => removeOldHost());\n  };\n}\n// remove old styles\nexport function removeNgStyles() {\n  const docHead = document.head;\n  const _styles = docHead.querySelectorAll('style');\n  const styles = Array.prototype.slice.call(_styles);\n  styles.filter(style => style.innerText.indexOf('_ng') !== -1).map(el => docHead.removeChild(el));\n}\n// get input values\nexport function getInputValues() {\n  const _inputs = document.querySelectorAll('input');\n  const inputs = Array.prototype.slice.call(_inputs);\n  return inputs.map(input => input.value);\n}\n// set input values\nexport function setInputValues(_inputs) {\n  const inputs = document.querySelectorAll('input');\n  if (_inputs && inputs.length === _inputs.length) {\n    _inputs.forEach((value, i) => {\n      const el = inputs[i];\n      el.value = value;\n      el.dispatchEvent(new CustomEvent('input', {\n        detail: el.value\n      }));\n    });\n    // clear array\n    _inputs.length = 0;\n  }\n}\n// get/set input values\nexport function createInputTransfer() {\n  const _inputs = getInputValues();\n  return function restoreInputValues() {\n    return setInputValues(_inputs);\n  };\n}","map":{"version":3,"names":["identity","val","bootloader","main","before","after","_main","readyState","document","__domReadyHandler","removeEventListener","addEventListener","createNewHosts","cmps","components","Array","prototype","map","call","componentNode","newNode","createElement","tagName","parentNode","currentDisplay","style","display","insertBefore","removeOldHost","removeChild","e","removeOldHosts","forEach","removeNgStyles","docHead","head","_styles","querySelectorAll","styles","slice","filter","innerText","indexOf","el","getInputValues","_inputs","inputs","input","value","setInputValues","length","i","dispatchEvent","CustomEvent","detail","createInputTransfer","restoreInputValues"],"sources":["C:/Users/Public/Documents/Quizms/Front-end/node_modules/@angularclass/hmr/dist/helpers.js"],"sourcesContent":["// Hot Module Replacement\nfunction identity(val) {\n    return val;\n}\nexport function bootloader(main, before, after) {\n    if (typeof main === 'object') {\n        const _main = main.main;\n        before = main.before;\n        after = main.after;\n        main = _main;\n    }\n    before = before || identity;\n    after = after || identity;\n    const readyState = document.readyState;\n    function __domReadyHandler() {\n        document.removeEventListener('DOMContentLoaded', __domReadyHandler);\n        after(main(before(readyState)));\n    }\n    switch (readyState) {\n        case 'loading':\n            document.addEventListener('DOMContentLoaded', __domReadyHandler);\n            break;\n        case 'interactive':\n        case 'complete':\n        default:\n            after(main(before(readyState)));\n    }\n}\n// create new host elements and remove the old elements\nexport function createNewHosts(cmps) {\n    const components = Array.prototype.map.call(cmps, function (componentNode) {\n        const newNode = document.createElement(componentNode.tagName);\n        const parentNode = componentNode.parentNode;\n        const currentDisplay = newNode.style.display;\n        newNode.style.display = 'none';\n        parentNode.insertBefore(newNode, componentNode);\n        function removeOldHost() {\n            newNode.style.display = currentDisplay;\n            try {\n                parentNode.removeChild(componentNode);\n            }\n            catch (e) { }\n        }\n        return removeOldHost;\n    });\n    return function removeOldHosts() {\n        components.forEach((removeOldHost) => removeOldHost());\n    };\n}\n// remove old styles\nexport function removeNgStyles() {\n    const docHead = document.head;\n    const _styles = docHead.querySelectorAll('style');\n    const styles = Array.prototype.slice.call(_styles);\n    styles\n        .filter((style) => style.innerText.indexOf('_ng') !== -1)\n        .map((el) => docHead.removeChild(el));\n}\n// get input values\nexport function getInputValues() {\n    const _inputs = document.querySelectorAll('input');\n    const inputs = Array.prototype.slice.call(_inputs);\n    return inputs.map((input) => input.value);\n}\n// set input values\nexport function setInputValues(_inputs) {\n    const inputs = document.querySelectorAll('input');\n    if (_inputs && inputs.length === _inputs.length) {\n        _inputs.forEach((value, i) => {\n            const el = inputs[i];\n            el.value = value;\n            el.dispatchEvent(new CustomEvent('input', { detail: el.value }));\n        });\n        // clear array\n        _inputs.length = 0;\n    }\n}\n// get/set input values\nexport function createInputTransfer() {\n    const _inputs = getInputValues();\n    return function restoreInputValues() {\n        return setInputValues(_inputs);\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}